#!/usr/bin/env node

const { execSync } = require('child_process');
const os = require('os');
const path = require('path');

function getLocalIP() {
  const interfaces = os.networkInterfaces();
  
  // –ü–æ—Ä—è–¥–æ–∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
  const priorityOrder = ['Wi-Fi', 'Ethernet', 'en0', 'eth0', 'wlan0'];
  
  let fallbackIP = null;
  
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
  for (const interfaceName of priorityOrder) {
    if (interfaces[interfaceName]) {
      for (const details of interfaces[interfaceName]) {
        if (details.family === 'IPv4' && !details.internal) {
          return details.address;
        }
      }
    }
  }
  
  // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö, –∏—â–µ–º –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
  for (const interfaceName in interfaces) {
    if (priorityOrder.includes(interfaceName)) continue;
    
    for (const details of interfaces[interfaceName]) {
      if (details.family === 'IPv4' && !details.internal) {
        if (!fallbackIP) {
          fallbackIP = details.address;
        }
      }
    }
  }
  
  return fallbackIP || 'localhost';
}

function main() {
  const localIP = getLocalIP();
  
  console.log('üîß Mobile Development Setup');
  console.log('=====================================');
  console.log(`üì± Local IP: ${localIP}`);
  console.log(`üåê Frontend URL: http://${localIP}:3000`);
  console.log(`üîå Backend API: http://${localIP}:5002/api`);
  console.log(`üì° WebSocket: ws://${localIP}:5002/ws`);
  console.log('=====================================');
  console.log('üìã QR Code for mobile access:');
  console.log(`   Open this URL on your phone: http://${localIP}:3000`);
  console.log('=====================================');
  
  // –°–æ–∑–¥–∞–µ–º .env.mobile —Å —Ç–µ–∫—É—â–∏–º IP
  const envContent = `# Mobile testing environment settings (auto-generated)
REACT_APP_API_URL=http://${localIP}:5002/api
REACT_APP_WS_URL=ws://${localIP}:5002/ws
REACT_APP_ENV=development
SKIP_PREFLIGHT_CHECK=true
DISABLE_ESLINT_PLUGIN=true
GENERATE_SOURCEMAP=true
HOST=0.0.0.0
PORT=3000`;

  const fs = require('fs');
  const envPath = path.join(__dirname, '..', '.env.mobile');
  fs.writeFileSync(envPath, envContent);
  
  console.log(`‚úÖ Updated .env.mobile with IP ${localIP}`);
  console.log('üöÄ Starting development server...');
  console.log('');
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º dev server —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  try {
    execSync('npm run start:mobile:generated', {
      stdio: 'inherit',
      env: {
        ...process.env,
        REACT_APP_API_URL: `http://${localIP}:5002/api`,
        REACT_APP_WS_URL: `ws://${localIP}:5002/ws`,
        HOST: '0.0.0.0',
        PORT: '3000',
        REACT_APP_ENV: 'development'
      }
    });
  } catch (error) {
    console.error('‚ùå Error starting development server:', error.message);
    process.exit(1);
  }
}

main();