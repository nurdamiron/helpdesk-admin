#!/usr/bin/env node

const { execSync } = require('child_process');
const os = require('os');
const path = require('path');

function getLocalIP() {
  const interfaces = os.networkInterfaces();
  
  // –ü–æ—Ä—è–¥–æ–∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
  const priorityOrder = ['Wi-Fi', 'Ethernet', 'en0', 'eth0', 'wlan0'];
  
  let fallbackIP = null;
  
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
  for (const interfaceName of priorityOrder) {
    if (interfaces[interfaceName]) {
      for (const details of interfaces[interfaceName]) {
        if (details.family === 'IPv4' && !details.internal) {
          return details.address;
        }
      }
    }
  }
  
  // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö, –∏—â–µ–º –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
  for (const interfaceName in interfaces) {
    if (priorityOrder.includes(interfaceName)) continue;
    
    for (const details of interfaces[interfaceName]) {
      if (details.family === 'IPv4' && !details.internal) {
        if (!fallbackIP) {
          fallbackIP = details.address;
        }
      }
    }
  }
  
  return fallbackIP || 'localhost';
}

function main() {
  const localIP = getLocalIP();
  
  console.log('üîß Backend Mobile Development Setup');
  console.log('=====================================');
  console.log(`üì± Local IP: ${localIP}`);
  console.log(`üîå Backend will run on: http://${localIP}:5002`);
  console.log(`üì° WebSocket will run on: ws://${localIP}:5002/ws`);
  console.log('=====================================');
  console.log('üìã CORS –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è:');
  console.log(`   - http://localhost:3000 (–ª–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)`);
  console.log(`   - http://${localIP}:3000 (–º–æ–±–∏–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø)`);
  console.log('=====================================');
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É backend
  const backendPath = path.join(__dirname, '..', '..', 'helpdesk-backend');
  
  try {
    process.chdir(backendPath);
    console.log(`üìÅ Changed to backend directory: ${backendPath}`);
  } catch (error) {
    console.error(`‚ùå Cannot change to backend directory: ${backendPath}`);
    console.log('üìù Make sure you have the backend in the correct location');
    console.log('   Expected structure:');
    console.log('   helpdesk/');
    console.log('   ‚îú‚îÄ‚îÄ helpdesk-admin/     (frontend)');
    console.log('   ‚îî‚îÄ‚îÄ helpdesk-backend/   (backend)');
    process.exit(1);
  }
  
  console.log('üöÄ Starting backend server with mobile CORS settings...');
  console.log('');
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º backend —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ CORS –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  try {
    execSync('npm start', {
      stdio: 'inherit',
      env: {
        ...process.env,
        PORT: '5002',
        CORS_ORIGIN: `http://localhost:3000,http://${localIP}:3000`,
        HOST: '0.0.0.0'
      }
    });
  } catch (error) {
    console.error('‚ùå Error starting backend server:', error.message);
    console.log('');
    console.log('üìù Make sure you have:');
    console.log('   1. Node.js installed');
    console.log('   2. npm dependencies installed (run: npm install)');
    console.log('   3. Backend properly configured');
    process.exit(1);
  }
}

main();